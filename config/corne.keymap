/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
            layers = <0>;
        };

        bkt {
            bindings = <&mt LBKT RBKT>;
            key-positions = <5 4>;
        };

        par {
            bindings = <&mt LPAR RPAR>;
            key-positions = <17 16>;
        };

        brc {
            bindings = <&mt LBRC RBRC>;
            key-positions = <29 28>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <15 16>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <12 13>;
        };

        tag {
            bindings = <&kp HASH>;
            key-positions = <5 17>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <14 15>;
        };

        left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <13 14>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <2 14>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <14 26>;
        };

        leftbspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <0 1>;
        };

        greater {
            bindings = <&kp GREATER_THAN>;
            key-positions = <12 13>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <24 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 1 ESC       &kp Q               &kp W           &kp E        &kp R                   &kp T                  &kp Y          &kp U  &kp I             &kp O                &mt PRINTSCREEN P             &mt UNDER MINUS
&kp LEFT_SHIFT  &mt LEFT_CONTROL A  &mt LEFT_ALT S  &kp D        &kp F                   &kp G                  &kp H          &kp J  &kp K             &kp L                &mt DOUBLE_QUOTES APOSTROPHE  &mt EQUAL PLUS
&lt 2 CAPS      &mt LEFT_CONTROL Z  &kp X           &mt LC(C) C  &mt LC(V) V             &kp B                  &kp N          &kp M  &mt PERIOD COMMA  &mt SEMICOLON COLON  &mt TILDE GRAVE               &mt QMARK EXCL
                                                    &kp SPACE    &mt LEFT_ALT BACKSPACE  &mt LEFT_GUI DELETE    &kp BACKSPACE  &mo 3  &kp SPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &kp LBKT      &kp RBKT        &trans    &trans    &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&kp TAB         &kp MINUS    &kp N0           &kp N7        &kp N8      &kp N9          &kp        &kp            &kp        &kp  &kp  &kp
&kp LEFT_SHIFT  &kp PLUS     &kp KP_MULTIPLY  &kp NUMBER_4  &kp N5      &kp NUMBER_6    &kp        &kp            &kp        &kp  &kp  &kp
&kp SLASH       &kp PERCENT  &kp KP_EQUAL     &kp NUMBER_1  &kp N2      &kp NUMBER_3    &kp        &kp            &kp        &kp  &kp  &kp
                                              &kp SPACE     &kp DELETE  &kp             &kp ENTER  &kp BACKSPACE  &kp SPACE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
